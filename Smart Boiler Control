// ****** Library, Header Files Declaration

#include <SoftwareSerial.h>
#include "WiFly.h"      // Header file for WiFi connection establishment and communication


#include "dht.h"
#define dht_apin A4     // Analog Pin 4 is connected to DHT sensor

const int alarmpin = 8; // Alarm pin D8

dht DHT;

#define SSID      "Sanketss"            // WiFi Connection Sanketss
#define KEY       "iedu6164"            // WiFi Passowrd iedu6164
#define AUTH      WIFLY_AUTH_WPA2_PSK   // wiFi security

int flag = 0;

SoftwareSerial wiflyUart(2, 3);         // create a WiFi shield serial object
WiFly wifly(&wiflyUart);                // pass the wifi siheld serial object to the WiFly class
char ip[16];






void setup()
{

// ****** Serial Monitor Initialisation

    Serial.begin(9600);            // Serial Monitor Initialisation
    delay(500);                    //Delay to let system boot
    delay(1000);                    //Wait before accessing Sensor

    pinMode(alarmpin, OUTPUT);
    digitalWrite(alarmpin, LOW);

    
    pinMode(11,OUTPUT);
    wiflyUart.begin(9600);         // start wifi shield uart port

    Serial.println("--------- Smart Boiler System --------");
    delay(1000);// wait for initilization of wifly
    wifly.reset(); // reset the shield
    delay(1000);



// ***** Network Connection Establishment


    //set WiFly params
    wifly.sendCommand("set ip local 80\r"); // set the local comm port to 80
    delay(100);
    wifly.sendCommand("set comm remote 0\r"); // do not send a default string when a connection opens
    delay(100);
    wifly.sendCommand("set comm open *OPEN*\r"); // set the string that the wifi shield will output when a connection is opened
    delay(100);
    Serial.println("Join " SSID );
    
    if (wifly.join(SSID, KEY, AUTH)) {
        Serial.println("OK");
    } else {
        Serial.println("Failed");
    }
    delay(5000);

    wifly.sendCommand("get ip\r");
    wiflyUart.setTimeout(500);
    if(!wiflyUart.find("IP="))
    {
        Serial.println("can not get ip");
        while(1);;
    }else
    {
        Serial.print("IP:");
    }

    char c;
    int index = 0;
    while (wifly.receive((uint8_t *)&c, 1, 300) > 0) { // print the response from the get ip command
        if(c == ':')
        {
            ip[index] = 0;
            break;
        }
        ip[index++] = c;
        Serial.print((char)c);
    }
    Serial.println();
    while (wifly.receive((uint8_t *)&c, 1, 300) > 0);;
    Serial.println("Web server ready");
}







void loop()
{
    

// ****** Measurement of readings from sensor
                
    int sensorValPressure=analogRead(A1);
    float voltage = (sensorValPressure*5.0)/1024.0;
    float pressure_pascal = (3.0*((float)voltage-0.475))*1000000.0;         
    float pressure_bar = pressure_pascal/10e5;
    float pressure_psi = pressure_bar*14.5038;
 
    DHT.read11(dht_apin);

    if(pressure_bar < 0.05){
      digitalWrite(11, LOW);
    }
    
    if(DHT.temperature > 25.00){
      digitalWrite(alrmpin, HIGH);
    }
  
    delay(5000);//Wait 5 seconds before accessing sensor again.
  





// ****** Communication with the network


    if(wifly.available())       // the wifi shield has data available
    {
        if(wiflyUart.find("*OPEN*")) // see if the data available is from an open connection by looking for the *OPEN* string
        {
            Serial.println("New Browser Request!");
            delay(1000); // delay enough time for the browser to complete sending its HTTP request string

            if(wiflyUart.find("pin=")) // look for the string "pin=" in the http request, if it's there then we want to control the LED
            {
                Serial.println("Remote Control initiated");
                // the user wants to toggle the LEDs
                int pinNumber = (wiflyUart.read()-48); // get first number i.e. if the pin 13 then the 1st number is 1
                int secondNumber = (wiflyUart.read()-48);
                if(secondNumber>=0 && secondNumber<=9)
                {
                    pinNumber*=10;
                    pinNumber +=secondNumber; // get second number, i.e. if the pin number is 13 then the 2nd number is 3, then add to the first number
                }
                digitalWrite(pinNumber, !digitalRead(pinNumber)); // toggle pin
                // Build pinstate string. The Arduino replies to the browser with this string.
                String pinState = "Boiler ";
                pinState+=" is ";
                if(digitalRead(pinNumber)) // check if the pin is ON or OFF
                {
                    pinState+="ON"; // the pin is on
                }
                else
                {
                    pinState+="OFF";  // the pin is off
                }
                // build HTTP header Content-Length string.
                String contentLength="Content-Length: ";
                contentLength+=pinState.length(); // the value of the length is the lenght of the string the Arduino is replying to the browser with.
                // send HTTP header
                wiflyUart.println("HTTP/1.1 200 OK");
                wiflyUart.println("Content-Type: text/html; charset=UTF-8");
                wiflyUart.println(contentLength); // length of HTML code
                wiflyUart.println("Connection: close");
                wiflyUart.println();
                // send response
                wiflyUart.print(pinState);
            }
            else
            {   String State = "ON";
                if (digitalRead(11) == 0){
                  State = "ON";
                }
                else{
                  State = "OFF";
                }

                
      digitalWrite(8, HIGH);

                
    int sensorValPressure=analogRead(A1);
    float voltage = (sensorValPressure*5.0)/1024.0;
    float pressure_pascal = (3.0*((float)voltage-0.475))*1000000.0;         
    float pressure_bar = pressure_pascal/10e5;
    float pressure_psi = pressure_bar*14.5038;
    Serial.print("Pressure = ");
    Serial.print(pressure_bar);
    Serial.print(" bars  ");
    Serial.print ("psi ");
    Serial.print(pressure_psi);
    Serial.println();
 
    DHT.read11(dht_apin);
    
    Serial.print("Current humidity = ");
    Serial.print(DHT.humidity);
    Serial.print("%  ");
    Serial.print(DHT.temperature);
    Serial.print("255.00"); 
    Serial.println("C  ");


                
                // send HTTP header
                wiflyUart.println("HTTP/1.1 200 OK");
                wiflyUart.println("Content-Type: text/html; charset=UTF-8");
                wiflyUart.println("Content-Length: 858"); // length of HTML code
                wiflyUart.println("Connection: close");
                wiflyUart.println();

                // send webpage's HTML code
            
                wiflyUart.print("<html>");
                wiflyUart.print("<head>");
                wiflyUart.print("<title>WiFi Shield Webpage</title>");
                wiflyUart.print("</head>");
                wiflyUart.print("<body>");
                wiflyUart.print("<h1 style=\"color:blue;\">Smart Boiler Monitoring </h1><br>");
                wiflyUart.print("<img src=\"http://ftper.newsusa.com/Thumbnail/WallHungBoiler.jpg\">");
                wiflyUart.print("<br><br><a href=\"https://www.google.co.uk/search?q=dagenham+heathway+weather&oq=dagenham+heathway+&aqs=chrome.3.69i57j69i60l2j35i39l2j0.5810j1j7&sourceid=chrome&ie=UTF-8\">Current Weather for your location</a><br><br>");
                // In the <button> tags, the ID attribute is the value sent to the arduino via the "pin" GET parameter
                wiflyUart.print("<button id=\"11\" class=\"led\">Switch Boiler ON"); // button for pin 11
                wiflyUart.print(State);
                wiflyUart.print("</button> ");
                wiflyUart.print("<br><br>The water fluid pressure is ");
                wiflyUart.print(pressure_bar);
                wiflyUart.print(" bar<br><br>The current room temperature is ");
                wiflyUart.print(DHT.temperature);
                wiflyUart.print(" C<br><br>Humidity is ");
                wiflyUart.print(DHT.humidity);
                wiflyUart.print("<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js\"></script>");
                wiflyUart.print("<script type=\"text/javascript\">");
                wiflyUart.print("$(document).ready(function(){"); 
                wiflyUart.print("$(\".led\").click(function(){"); 
                wiflyUart.print("var p = $(this).attr('id');"); // get id value (i.e. pin13, pin12, or pin11)
                // send HTTP GET request to the IP address with the parameter "pin" and value "p", then execute the function
                // IMPORTANT: dont' forget to replace the IP address and port with YOUR shield's IP address and port
                wiflyUart.print("$.get(\"http://");
                wiflyUart.print(ip);
                wiflyUart.print(":80/a\", {pin:p},function(data){alert(data)});");// execute get request. Upon return execute the "function" (display an alert with the "data" send back to the browser.
                wiflyUart.print("});");
                wiflyUart.print("});");
                wiflyUart.print("</script>");
                wiflyUart.print("</body>");
                wiflyUart.print("</html>");
            }
            Serial.println("Data sent to browser");
        }
    }
}
